module VerifyExamples.Compiler exposing (compile, todoSpec)

import String
import String.Util exposing (escape, indent, indentLines, unlines)
import VerifyExamples.Function as Function exposing (Function)
import VerifyExamples.ModuleName as ModuleName exposing (ModuleName)
import VerifyExamples.Test as Test exposing (Test)
import VerifyExamples.TestSuite as TestSuite exposing (TestSuite)


compile : ModuleName -> TestSuite -> List ( ModuleName, String )
compile moduleName suite =
    List.indexedMap (compileTest moduleName suite) suite.tests


todoSpec : ModuleName -> ( ModuleName, String )
todoSpec moduleName =
    ( moduleName
    , unlines
        [ "module VerifyExamples." ++ ModuleName.toString moduleName ++ " exposing (..)"
        , ""
        , "-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples)."
        , "-- Please don't modify this file by hand!"
        , ""
        , "import Test"
        , "import Expect"
        , ""
        , ""
        , "spec : Test.Test"
        , "spec ="
        , indent 1 <|
            "Test.todo \"module "
                ++ ModuleName.toString moduleName
                ++ ": No examples to verify yet!\""
        ]
    )


compileTest : ModuleName -> TestSuite -> Int -> Test -> ( ModuleName, String )
compileTest moduleName suite index test =
    let
        extendedModuleName =
            Test.specName index test
                |> ModuleName.extendName moduleName
    in
    ( extendedModuleName
    , unlines
        [ moduleHeader suite extendedModuleName
        , imports suite moduleName
        , unlines suite.types
        , ""
        , suite.helperFunctions
            |> List.map Function.toString
            |> unlines
        , ""
        , spec index test
        ]
    )


moduleHeader : TestSuite -> ModuleName -> String
moduleHeader { imports } moduleName =
    unlines
        [ "module VerifyExamples." ++ ModuleName.toString moduleName ++ " exposing (..)"
        , ""
        , "-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples)."
        , "-- Please don't modify this file by hand!"
        , ""
        ]


imports : TestSuite -> ModuleName -> String
imports { imports } moduleName =
    unlines
        [ "import Test"
        , "import Expect"
        , "import " ++ ModuleName.toString moduleName ++ " exposing(..)"
        , ""
        , unlines imports
        , ""
        ]


spec : Int -> Test -> String
spec index test =
    unlines
        [ ""
        , ""
        , "spec" ++ toString index ++ " : Test.Test"
        , "spec" ++ toString index ++ " ="
        , indent 1 (testDefinition test)
        , indent 2 "\\() ->"
        , indent 3 "Expect.equal"
        , indentLines 4 (Test.specBody test)
        ]


testDefinition : Test -> String
testDefinition test =
    String.concat
        [ "Test.test \""
        , Test.name test
        , ": \\n\\n"
        , Test.exampleDescription test
            |> String.lines
            |> List.map (indent 1 >> escape)
            |> String.join "\\n"
        , "\" <|"
        ]
